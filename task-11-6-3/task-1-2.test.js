/* Module 11.7, Задание 2. Выбрать любую реализованную функцию из тренажера 
JavaScript, раздел «Функции»

добавить ее в репозиторий;
продумать тест-кейсы (успешное/неуспешное выполнение функции);
продумать корнер-кейсы; 
написать unit-тесты (минимум 3).*/

/*Тестируем функцию, которая получает число {n} в качестве 
аргумента и печатает в консоль обратный отсчет, начиная с этого числа. 
Допустим максимальное число 3, countDown(3) напечатает: 3 2 1.*/ 


import { countDown } from './task-1-2.js';

// Запускаем коллекцию тестов
describe("test countDown", () => {
  // Обещание - числа при обратном отсчете дают
  it("the numbers when counting down to equal 3, 2, 1", () => {
    let n; 
    let result = (countDown(n));
    // Функция сопоставления, чтобы утверждать что-то о значении
    expect(result).toBe(n); // тест исполнен
  }),
    // Описываем тест на предмет получения числа n функцией
    it("if n is located in the countDown to equal 3, 2, 1", () => {
      let n;
      const expected = n;
      expect(countDown(expected)).toBe(n); // тест исполнен
    }),
    /*Проверка наличия и значений различных свойств в объекте, на основании результата объекта,
    если такое свойство есть, то функция дает положительный результат*/ 
    it("if 2 is located in obj to equal countDown 3, 2, 1", () => { 
      const features = {
        a: 1,
        b: 2,
        c: 3,
      };
      // Используем toHaveProperty для проверки наличия и значений различных свойств в объекте
      expect(features).toHaveProperty('b', 2); // тест исполнен
    }),
    /*Проверяю некоторые свойства features объекта. Написал тест с фиктивным обещанием - 
    если есть такое свойство, то функция выдаст положительный результат, если нет, 
    то результат будет отрицательный*/
    test("has a name, if c with value 4 is located in obj to equal countDown 3, 2, 1", () => {
      const features = {
        a: 1,
        b: 2,
        c: 3,
      };
      expect(features.c).toBe(4); // тест провалится
    });
}); 